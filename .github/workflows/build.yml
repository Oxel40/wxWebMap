name: Test Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.config.os }} # we run many different builds
    strategy:
      # just an example matrix
      max-parallel: 2
      matrix:
        config:
          # - os: ubuntu-latest
          # - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0
        with:
          submodules: true
      #-uses: actions/cache@v1   <===== YOU DO NOT NEED THIS!
      
#      - name: Create Binary Cache Directory
#        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
#        shell: bash

      # Install latest CMake.
      - uses: lukka/get-cmake@latest
      # Or pin to a specific CMake version:
      # lukka/get-cmake@v3.21.2

      # Restore from cache the previously built ports. If a "cache miss" occurs,
      # then vcpkg is bootstrapped. Since a the vcpkg.json is being used later on
      # to install the packages when `run-cmake` runs, no packages are installed at
      # this time.
#      - name: Restore artifacts, or setup vcpkg (do not install any package)
#        uses: lukka/run-vcpkg@v10
#        # with:
#        #   runVcpkgInstall: true
#
#      - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
#        uses: lukka/run-cmake@v10
#        with:
#          configurePreset: 'windows-x64-debug'
#          buildPreset: 'windows-x64-debug'
      - name: Restore vcpkg Cache
        id: cache-vcpkg-restore
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: "${{ matrix.config.os }}-vcpkg-cache"

      - name: Generate CMake files
        run: cmake . -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" # --preset windows-x64-release
      
      - name: Save vcpkg Cache
        id: cache-vcpkg-save
        uses: actions/cache/save@v3
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: ${{ steps.cache-vcpkg-restore.outputs.cache-primary-key }}
      
      - name: Build
        run: cmake --build .

    env:
    #  By default the action disables vcpkg's telemetry by defining VCPKG_DISABLE_METRICS. 
    #  This behavior can be disabled by defining `VCPKG_ENABLE_METRICS` as follows.
      VCPKG_ENABLE_METRICS: 0
      VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/out/vcpkg-cache"
      VCPKG_INSTALL_OPTIONS: --clear-after-build
    #
    #  [OPTIONAL] Define the vcpkg's triplet you want to enforce, otherwise the default one
    #  for the hosting system will be automatically choosen (x64 is the default on all 
    #  platforms, e.g. `x64-osx`).
    #  VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
